<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yikangyiliao.pension.dao.FormPostsDao" >
  <resultMap id="BaseResultMap" type="com.yikangyiliao.pension.entity.FormPosts" >
    <id column="forum_post_id" property="forumPostId" jdbcType="BIGINT" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="report_complaints_status" property="reportComplaintsStatus" jdbcType="TINYINT" />
    <result column="is_essence" property="isEssence" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="stars" property="stars" jdbcType="INTEGER" />
    <result column="share_num" property="shareNum" jdbcType="INTEGER" />
    <result column="create_user_id" property="createUserId" jdbcType="BIGINT" />
    <result column="share_url" property="shareUrl" jdbcType="VARCHAR" />
    <result column="recommend_pic_url" property="recommendPicUrl" jdbcType="VARCHAR" />
    <result column="forum_post_group" property="forumPostGroup" jdbcType="TINYINT" />
    <result column="forum_posts_uuid" property="forumPostsUuid" jdbcType="VARCHAR" />
    <result column="forum_post_detail_content" property="forumPostDetailContent" jdbcType="LONGVARCHAR" />
    <result column="forum_post_html_detail_content" property="forumPostHtmlDetailContent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    forum_post_id, title, content, report_complaints_status, is_essence, create_time, 
    update_time, stars, share_num, create_user_id, share_url, recommend_pic_url, forum_post_group, 
    forum_posts_uuid
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from forum_posts
    where forum_post_id = #{forumPostId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from forum_posts
    where forum_post_id = #{forumPostId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yikangyiliao.pension.entity.FormPosts" >
    <selectKey resultType="Long" keyProperty="forumPostId" order="AFTER">
		SELECT LAST_INSERT_ID()
	</selectKey>
    insert into forum_posts (forum_post_id, title, content, 
      report_complaints_status, is_essence, create_time, 
      update_time, stars, share_num, 
      create_user_id, share_url, recommend_pic_url, 
      forum_post_group, forum_posts_uuid)
    values (#{forumPostId,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{reportComplaintsStatus,jdbcType=TINYINT}, #{isEssence,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{stars,jdbcType=INTEGER}, #{shareNum,jdbcType=INTEGER}, 
      #{createUserId,jdbcType=BIGINT}, #{shareUrl,jdbcType=VARCHAR}, #{recommendPicUrl,jdbcType=VARCHAR}, 
      #{forumPostGroup,jdbcType=TINYINT}, #{forumPostsUuid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yikangyiliao.pension.entity.FormPosts" >
    <selectKey resultType="Long" keyProperty="forumPostId" order="AFTER">
		SELECT LAST_INSERT_ID()
	</selectKey>
    insert into forum_posts
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="forumPostId != null" >
        forum_post_id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="reportComplaintsStatus != null" >
        report_complaints_status,
      </if>
      <if test="isEssence != null" >
        is_essence,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="stars != null" >
        stars,
      </if>
      <if test="shareNum != null" >
        share_num,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="shareUrl != null" >
        share_url,
      </if>
      <if test="recommendPicUrl != null" >
        recommend_pic_url,
      </if>
      <if test="forumPostGroup != null" >
        forum_post_group,
      </if>
      <if test="forumPostsUuid != null" >
        forum_posts_uuid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="forumPostId != null" >
        #{forumPostId,jdbcType=BIGINT},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="reportComplaintsStatus != null" >
        #{reportComplaintsStatus,jdbcType=TINYINT},
      </if>
      <if test="isEssence != null" >
        #{isEssence,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="stars != null" >
        #{stars,jdbcType=INTEGER},
      </if>
      <if test="shareNum != null" >
        #{shareNum,jdbcType=INTEGER},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="shareUrl != null" >
        #{shareUrl,jdbcType=VARCHAR},
      </if>
      <if test="recommendPicUrl != null" >
        #{recommendPicUrl,jdbcType=VARCHAR},
      </if>
      <if test="forumPostGroup != null" >
        #{forumPostGroup,jdbcType=TINYINT},
      </if>
      <if test="forumPostsUuid != null" >
        #{forumPostsUuid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yikangyiliao.pension.entity.FormPosts" >
    update forum_posts
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="reportComplaintsStatus != null" >
        report_complaints_status = #{reportComplaintsStatus,jdbcType=TINYINT},
      </if>
      <if test="isEssence != null" >
        is_essence = #{isEssence,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="stars != null" >
        stars = #{stars,jdbcType=INTEGER},
      </if>
      <if test="shareNum != null" >
        share_num = #{shareNum,jdbcType=INTEGER},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="shareUrl != null" >
        share_url = #{shareUrl,jdbcType=VARCHAR},
      </if>
      <if test="recommendPicUrl != null" >
        recommend_pic_url = #{recommendPicUrl,jdbcType=VARCHAR},
      </if>
      <if test="forumPostGroup != null" >
        forum_post_group = #{forumPostGroup,jdbcType=TINYINT},
      </if>
      <if test="forumPostsUuid != null" >
        forum_posts_uuid = #{forumPostsUuid,jdbcType=VARCHAR},
      </if>
    </set>
    where forum_post_id = #{forumPostId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yikangyiliao.pension.entity.FormPosts" >
    update forum_posts
    set title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      report_complaints_status = #{reportComplaintsStatus,jdbcType=TINYINT},
      is_essence = #{isEssence,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      stars = #{stars,jdbcType=INTEGER},
      share_num = #{shareNum,jdbcType=INTEGER},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      share_url = #{shareUrl,jdbcType=VARCHAR},
      recommend_pic_url = #{recommendPicUrl,jdbcType=VARCHAR},
      forum_post_group = #{forumPostGroup,jdbcType=TINYINT},
      forum_posts_uuid = #{forumPostsUuid,jdbcType=VARCHAR}
    where forum_post_id = #{forumPostId,jdbcType=BIGINT}
  </update>
  
  
    <!-- 获取推荐的文章 -->
  <resultMap type="com.yikangyiliao.pension.entity.FormPosts" id="formPostsResultMap"  extends="BaseResultMap">
  	<result column="stars" 			property="stars"/>
  	<result column="answersNums" 	property="answersNums"/>
  	<result column="user_name" 		property="userName"/>
  	<result column="photo_url" 		property="photoUrl"/>
  	<result column="user_position" 		property="userPosition"/>
  	<collection property="taglibs" fetchType="eager" column="forum_post_id" select="com.yikangyiliao.pension.dao.TaglibDao.getTaglibsByFormPostId"></collection>
  </resultMap>
  <select id="getIsEssence" resultMap="formPostsResultMap" parameterType="map">
  <if test="null == userId">
  		select 
		<include refid="Base_Column_List"></include>,
		(select count(1) from forum_posts_star_lists fpsl where fpsl.create_user_id=forum_post_id) as stars,
		(select count(1) from forum_posts_answers fpa 	  where fpa.form_post_id=forum_post_id) as answersNums,
		(select user_name from user_infos where user_id=create_user_id) as user_name,
        (select photo_url from user_infos where user_id=create_user_id) as photo_url,
        (select user_position from user_service_infos where user_id=create_user_id) as user_position
  	from forum_posts where is_essence=1
  </if>
  <if test="null != userId">
   	select 
		forum_posts.*,
		(select count(1) from forum_posts_star_lists fpsl where fpsl.create_user_id=forum_posts.forum_post_id) as stars,
		(select count(1) from forum_posts_answers fpa 	  where fpa.form_post_id=forum_posts.forum_post_id) as answersNums,
		(select user_name from user_infos where user_id=forum_posts.create_user_id) as user_name,
		(select photo_url from user_infos where user_id=forum_posts.create_user_id) as photo_url,
		 (select user_position from user_service_infos where user_id=forum_posts.create_user_id) as user_position,
	    case 
			when fpsl.forum_posts_star_list_id>=0 then 1 else 0 
		end as 'isStar'
	from forum_posts 
	left join (select forum_posts_star_list_id,forum_posts_id from forum_posts_star_lists where create_user_id=#{userId}) fpsl
	on forum_posts.forum_post_id=fpsl.forum_posts_id
	where is_essence=1
  </if>
  </select>
  
  
  
  <resultMap id="getFormPoustsDetailByForumPostIdResultMap" type="com.yikangyiliao.pension.entity.FormPosts"  extends="BaseResultMap">
  	<result column="user_name" property="userName"/>
  	<result column="photo_url" property="photoUrl"/>
  	<result column="user_position" property="userPosition"/>
  	<result column="designation_name" property="designationName"/>
  	<result column="isStar" property="isStar"></result>
  	<result column="isStore" property="isStore"/>
  	<collection property="taglibs" 		      	column="forum_post_id"	fetchType="eager" select="com.yikangyiliao.pension.dao.TaglibDao.getTaglibsByFormPostId"></collection>
  	<collection property="formPostsStarLists" 	column="forum_post_id"  fetchType="eager" select="com.yikangyiliao.pension.dao.FormPostsStarListDao.getForumPostStartListByForumPostsId"></collection>
  	<collection property="forumPostsAnswers"    column="forum_post_id"	fetchType="eager" select="com.yikangyiliao.pension.dao.ForumPostsAnswerDao.getForumPostsAnswersByFormPostId"></collection>
  	<collection property="forumPostsImage" 		column="forum_post_id"  fetchType="eager" select="com.yikangyiliao.pension.dao.ForumPostsImageDao.getForumPostImagesByForumPostsId"> </collection>
  </resultMap>
  <!-- 获取某一个文章的详情 -->
  <select id="getFormPoustsDetailByForumPostId" resultMap="getFormPoustsDetailByForumPostIdResultMap" parameterType="map">
<!--   	select -->
<!-- 		fp.*,ui.user_name,ui.photo_url, -->
<!--     case  -->
<!--         when fpsl.forum_posts_star_list_id is null  then 0 -->
<!--         when fpsl.forum_posts_star_list_id >0 		then 1 -->
<!-- 	end as isStar -->
<!-- 	from forum_posts fp left join  user_infos ui on fp.create_user_id=ui.user_id -->
<!-- 	left join forum_posts_star_lists fpsl on (fpsl.forum_posts_id=fp.forum_post_id and fpsl.create_user_id=#{userId}) -->
<!-- 	where forum_post_id=#{forumPostId} -->
	select
		fp.*,
		fpd.forum_post_detail_content,
		fpd.forum_post_html_detail_content,
		ui.user_name,ui.photo_url,usi.user_position,
		des.designation_name,
	case 
		when fpsl.forum_posts_star_list_id is null  then 0
		when fpsl.forum_posts_star_list_id >0 		then 1
	end as isStar,
	if(ifnull(store_ups.store_ups_id,-1)>0,1,0) as isStore
	from forum_posts fp left join  user_infos ui on fp.create_user_id=ui.user_id
	left join user_service_infos usi on ui.user_id=usi.user_id
	left join forum_posts_star_lists fpsl on (fpsl.forum_posts_id=fp.forum_post_id and fpsl.create_user_id=#{userId}) 
	left join store_ups on (store_ups.forum_post_id=fp.forum_post_id and store_ups.create_user_id=#{userId})
	left join forum_post_details fpd on fp.forum_post_id=fpd.forum_post_id
	left join designations des on des.designation_id=ui.designation_id
	where fp.forum_post_id=#{forumPostId}
	order by fp.create_time desc
  </select>
  
  <!-- 支持+1 -->
  <update id="formPostsStarsUpByForumPostId" parameterType="long">
  	UPDATE forum_posts set stars=stars+1 where forum_post_id=#{forumPostId}
  </update>
  
  <!--支持-1  -->
  <update id="formPostsStarsDownByForumPostId" parameterType="long">
  	UPDATE forum_posts set stars=stars-1 where forum_post_id=#{forumPostId}
  </update>
  
   <resultMap id="getFormPoustsDetailByForumPostIdResultMap2" type="com.yikangyiliao.pension.entity.FormPosts"  extends="BaseResultMap">
  	<result column="user_name" property="userName"/>
  	<result column="photo_url" property="photoUrl"/>
<!--   	<collection property="taglibs" 	column="forum_post_id"	fetchType="eager" select="com.yikangyiliao.pension.dao.TaglibDao.getTaglibsByFormPostId"></collection> -->
  </resultMap>
  
  
  
   <!-- 查询某一个标签下的所有文章 文章需要有，缩略内容 -->
  <resultMap type="com.yikangyiliao.pension.entity.FormPosts" id="getForumPostsByTaglibsIdResultMap" extends="BaseResultMap">
  	  	<result column="user_name" 			property="userName"/>
  		<result column="photo_url" 			property="photoUrl"/>
  		<result column="user_position" 		property="userPosition"/>
  		<result column="designation_name" 	property="designationName"/>
  		<collection property="taglibs" 		      	column="forum_post_id"	fetchType="eager" select="com.yikangyiliao.pension.dao.TaglibDao.getTaglibsByFormPostId"></collection>
  		<collection property="forumPostsImage" 	column="forum_post_id"  fetchType="eager" select="com.yikangyiliao.pension.dao.ForumPostsImageDao.getForumPostImagesByForumPostsId"> </collection>
  </resultMap>
  <select id="getForumPostsByTaglibsIdPage" resultMap="getForumPostsByTaglibsIdResultMap" parameterType="map" >
<!--   	select  -->
<!--   		fp.forum_post_id,  -->
<!--   		fp.title, -->
<!--   		fp.content, fp.report_complaints_status,  -->
<!--   		fp.is_essence,  -->
<!--   		fp.create_time,  -->
<!--         fp.update_time,  -->
<!--   		fp.stars,  -->
<!--   		fp.share_num,  -->
<!--   		fp.create_user_id,  -->
<!--   		fp.share_url,  -->
<!--   		fp.recommend_pic_url, -->
<!--   		ui.user_name,ui.photo_url, -->
<!--   		(select count(1) from forum_posts_answers fpa where fpa.form_post_id=forum_post_id) as answersNums -->
<!--   	from forum_posts fp -->
<!-- 	inner join forum_posts_taglibs_maps fptm on fp.forum_post_id=fptm.form_post_id -->
<!--     left join  user_infos ui 				 on fp.create_user_id=ui.user_id -->
	
<!-- 	where fptm.tag_libs_id=#{taglisId} -->

	select 
		fp.forum_post_id, 
		fp.title,
		fp.content, fp.report_complaints_status, 
		fp.is_essence, 
		fp.create_time, 
		fp.update_time, 
		fp.stars, 
		fp.share_num, 
		fp.create_user_id, 
		fp.share_url, 
		fp.recommend_pic_url,
		ui.user_name,ui.photo_url,
		usi.user_position,
		designations.designation_name,
		(select count(1) from forum_posts_answers fpa where fpa.form_post_id=fp.forum_post_id) as answersNums,
	    if(ifnull(store_ups.store_ups_id,-1)>0,1,0) as isStore,
	    if(ifnull(fpsl.forum_posts_id,-1)>0,1,0) as isStar
	from forum_posts fp
	inner join forum_posts_taglibs_maps fptm on fp.forum_post_id=fptm.form_post_id
	left join  user_infos ui 				 on fp.create_user_id=ui.user_id
	left join store_ups on (store_ups.forum_post_id=fp.forum_post_id and store_ups.create_user_id=#{userId})
	left join user_service_infos usi on ui.user_id=usi.user_id
	left join designations  on ui.designation_id=designations.designation_id
	left join (select * from forum_posts_star_lists where create_user_id=#{userId}) fpsl on fpsl.forum_posts_id=fp.forum_post_id
	where fptm.tag_libs_id=#{taglibId}
    and forum_post_group=#{forumPostGroup}
    order by fp.create_time desc
 </select>
  
  
  <!-- 查询某一个用户的最近发部的文章 -->
  <select id="getUserNewForumPostByCreateUserId" parameterType="long" resultMap="BaseResultMap">
  	select 
		<include refid="Base_Column_List"></include>
 	from forum_posts WHERE create_user_id=#{createUserId} order by update_time desc limit 1
  </select>
  
  <!-- 获取某一个人创建的帖子 -->
    <resultMap type="com.yikangyiliao.pension.entity.FormPosts" id="geForumPostsByCreateUserIdResultMap" extends="BaseResultMap">
  	  	<result column="user_name" property="userName"/>
  		<result column="photo_url" property="photoUrl"/>
  		<result column="answersNums" property="answersNums"/>
  		<collection property="taglibs" 		      	column="forum_post_id"	fetchType="eager" select="com.yikangyiliao.pension.dao.TaglibDao.getTaglibsByFormPostId"></collection>
  		<collection property="forumPostsImage" 	column="forum_post_id"  fetchType="eager" select="com.yikangyiliao.pension.dao.ForumPostsImageDao.getForumPostImagesByForumPostsId"> </collection>
  </resultMap>
  <select id="geForumPostsByCreateUserIdAndForumPostGroup" parameterType="map" resultMap="geForumPostsByCreateUserIdResultMap">
  	select 
		<include refid="Base_Column_List"></include>,
		(select count(1) from forum_posts_answers fpa where fpa.form_post_id=fp.forum_post_id) as answersNums
 	from forum_posts 
 	WHERE 
 		create_user_id=#{createUserId}
 	and forum_posts.forum_post_group=#{forumPostGroup}
 	order by update_time desc
  </select>
  
    <select id="geForumPostsByCreateUserIdAndForumPostGroupPage" parameterType="map" resultMap="geForumPostsByCreateUserIdResultMap">
  	select 
		<include refid="Base_Column_List"></include>,
		(select count(1) from forum_posts_answers fpa where fpa.form_post_id=forum_posts.forum_post_id) as answersNums
 	from forum_posts 
 	WHERE 
 		create_user_id=#{createUserId}
 	and forum_posts.forum_post_group=#{forumPostGroup}
 	order by update_time desc
  </select>
  
  <!-- 获取最热帖子 -->
  <select id="getHotForumPosts" resultMap="getForumPostsByTaglibsIdResultMap">
  	select 
		forum_posts.*,
	(select count(1) from forum_posts_answers fpa where fpa.form_post_id=forum_posts.forum_post_id) as answersNums,
	ui.user_name,
	ui.photo_url,
	usi.user_position,
	designations.designation_name
 	from forum_posts
 	left join  user_infos ui 				on forum_posts.create_user_id=ui.user_id
 	left join user_service_infos usi 		on ui.user_id=usi.user_id
	left join designations  				on ui.designation_id=designations.designation_id
	inner join  recommend_datas rd  on (forum_posts.forum_post_id=rd.data_id and rd.recomend_group=2 and rd.is_delete=0)
	where forum_posts.forum_post_group=0
 	order by stars desc
  </select>
  
  <!-- 获取最热帖子 -->
  <select id="getHotForumPostsPage" resultMap="getForumPostsByTaglibsIdResultMap" parameterType="map">
  	select 
		forum_posts.*,
	(select count(1) from forum_posts_answers fpa where fpa.form_post_id=forum_posts.forum_post_id) as answersNums,
	ui.user_name,
	ui.photo_url,
	usi.user_position,
	designations.designation_name
 	from forum_posts
 	left join  user_infos ui 			on forum_posts.create_user_id=ui.user_id
 	left join  user_service_infos usi 	on ui.user_id=usi.user_id
	left join  designations  			on ui.designation_id=designations.designation_id
	inner join recommend_datas rd  		on (forum_posts.forum_post_id=rd.data_id and rd.recomend_group=2 and rd.is_delete=0)
	where forum_posts.forum_post_group=0
 	order by stars desc
  </select>
  
  <!-- 
  	查询所有的文章数据 限制200条
   -->
  <select id="getFormPostsAll" resultMap="BaseResultMap">
  	select 
  		<include refid="Base_Column_List"></include>
  	from forum_posts where forum_posts.forum_post_group=1 order by create_time desc limit 200
  </select>
  
</mapper>