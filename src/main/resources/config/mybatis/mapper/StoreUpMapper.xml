<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yikangyiliao.pension.dao.StoreUpDao" >
 <resultMap id="BaseResultMap" type="com.yikangyiliao.pension.entity.StoreUp" >
    <id column="store_ups_id" property="storeUpsId" jdbcType="BIGINT" />
    <result column="forum_post_id" property="forumPostId" jdbcType="BIGINT" />
    <result column="create_user_id" property="createUserId" jdbcType="BIGINT" />
    <result column="groups" property="groups" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    store_ups_id, forum_post_id, create_user_id, groups, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from store_ups
    where store_ups_id = #{storeUpsId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from store_ups
    where store_ups_id = #{storeUpsId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yikangyiliao.pension.entity.StoreUp" >
    insert into store_ups (store_ups_id, forum_post_id, create_user_id, 
      groups, create_time, update_time
      )
    values (#{storeUpsId,jdbcType=BIGINT}, #{forumPostId,jdbcType=BIGINT}, #{createUserId,jdbcType=BIGINT}, 
      #{groups,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yikangyiliao.pension.entity.StoreUp" >
    insert into store_ups
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="storeUpsId != null" >
        store_ups_id,
      </if>
      <if test="forumPostId != null" >
        forum_post_id,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="groups != null" >
        groups,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="storeUpsId != null" >
        #{storeUpsId,jdbcType=BIGINT},
      </if>
      <if test="forumPostId != null" >
        #{forumPostId,jdbcType=BIGINT},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="groups != null" >
        #{groups,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yikangyiliao.pension.entity.StoreUp" >
    update store_ups
    <set >
      <if test="forumPostId != null" >
        forum_post_id = #{forumPostId,jdbcType=BIGINT},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="groups != null" >
        groups = #{groups,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where store_ups_id = #{storeUpsId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yikangyiliao.pension.entity.StoreUp" >
    update store_ups
    set forum_post_id = #{forumPostId,jdbcType=BIGINT},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      groups = #{groups,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where store_ups_id = #{storeUpsId,jdbcType=BIGINT}
  </update>
  
  <!-- 获取某一个用户的收藏 -->
    <resultMap type="com.yikangyiliao.pension.entity.StoreUp" extends="BaseResultMap" id="getStoreupByUserIdResultMap">
  	<association property="formPosts" javaType="com.yikangyiliao.pension.entity.FormPosts">
  		<result column="title" 			property="title"/>
  		<result column="user_name" 		property="userName"/>
  		<result column="photo_url" 		property="photoUrl"/>
  		<result column="user_position" 	property="userPosition"/>
  	</association>
  </resultMap>
  <select id="getStoreupByUserId" resultMap="BaseResultMap" parameterType="map">
  	select  
		su.*,fp.title,ui.user_name,ui.photo_url,usi.user_position
	from store_ups su left join forum_posts fp  on su.forum_post_id=fp.forum_post_id
	left join user_infos ui on fp.create_user_id=ui.user_id
	left join user_service_infos usi on ui.user_id=usi.user_id
	<where>
		<if test="null != userId">
		 	su.create_user_id=#{userId} 
		</if>
		<if test="null != groups">
			and su.groups=#{groups}
		</if>
	</where>
  </select>
  
  <!-- 删除我收藏的文章 -->
  <delete id="deleteForumPostByUserIdAndForumPostId" parameterType="map">
  	delete from store_ups where create_user_id=#{userId} and forum_post_id=#{forumPostId}
  </delete>
  
  <!-- 根据用户的id与文章id 查询某一个收藏 -->
  <select id="getStoreupByUserIdAndForumPostId" parameterType="map" resultMap="BaseResultMap">
  	select 
  		<include refid="Base_Column_List"></include>
  	from store_ups where create_user_id=#{userId}  and forum_post_id=#{forumPostId}
  </select>
  
</mapper>