<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yikangyiliao.pension.dao.ActivetyDao" >
  <resultMap id="BaseResultMap" type="com.yikangyiliao.pension.entity.Activety" >
    <id column="activety_id" property="activetyId" jdbcType="BIGINT" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="cost" property="cost" jdbcType="DOUBLE" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="person_number" property="personNumber" jdbcType="INTEGER" />
    <result column="check_status" property="checkStatus" jdbcType="TINYINT" />
    <result column="create_user_id" property="createUserId" jdbcType="BIGINT" />
    <result column="map_psition_address" property="mapPsitionAddress" jdbcType="VARCHAR" />
    <result column="detail_address" property="detailAddress" jdbcType="VARCHAR" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="entry_start_time" property="entryStartTime" jdbcType="TIMESTAMP" />
    <result column="entry_end_time" property="entryEndTime" jdbcType="TIMESTAMP" />
    <result column="activety_mode" property="activetyMode" jdbcType="TINYINT" />
    <result column="recommend_pic_url" property="recommendPicUrl" jdbcType="VARCHAR" />
    <result column="activety_status" property="activetyStatus" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    activety_id, title, content, cost, create_time, update_time, person_number, check_status, 
    create_user_id, map_psition_address, detail_address, start_time, end_time, entry_start_time, 
    entry_end_time, activety_mode, recommend_pic_url, activety_status
  </sql>
  <sql id="getActivetyPartacketNumber">
  	 (select count(1) as partaketNums from user_activety_lists where activety_id=activetys.activety_id) as partakeNums
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from activetys
    where activety_id = #{activetyId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from activetys
    where activety_id = #{activetyId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yikangyiliao.pension.entity.Activety" >
     <selectKey resultType="Long" keyProperty="activetyId" order="AFTER">
		SELECT LAST_INSERT_ID()
	</selectKey>
    insert into activetys (activety_id, title, content, 
      cost, create_time, update_time, 
      person_number, check_status, create_user_id, 
      map_psition_address, detail_address, start_time, 
      end_time, entry_start_time, entry_end_time, 
      activety_mode, recommend_pic_url, activety_status
      )
    values (#{activetyId,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{cost,jdbcType=DOUBLE}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{personNumber,jdbcType=INTEGER}, #{checkStatus,jdbcType=TINYINT}, #{createUserId,jdbcType=BIGINT}, 
      #{mapPsitionAddress,jdbcType=VARCHAR}, #{detailAddress,jdbcType=VARCHAR}, #{startTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP}, #{entryStartTime,jdbcType=TIMESTAMP}, #{entryEndTime,jdbcType=TIMESTAMP}, 
      #{activetyMode,jdbcType=TINYINT}, #{recommendPicUrl,jdbcType=VARCHAR}, #{activetyStatus,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yikangyiliao.pension.entity.Activety" >
    <selectKey resultType="Long" keyProperty="activetyId" order="AFTER">
		SELECT LAST_INSERT_ID()
	</selectKey>
    insert into activetys
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="activetyId != null" >
        activety_id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="cost != null" >
        cost,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="personNumber != null" >
        person_number,
      </if>
      <if test="checkStatus != null" >
        check_status,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="mapPsitionAddress != null" >
        map_psition_address,
      </if>
      <if test="detailAddress != null" >
        detail_address,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="entryStartTime != null" >
        entry_start_time,
      </if>
      <if test="entryEndTime != null" >
        entry_end_time,
      </if>
      <if test="activetyMode != null" >
        activety_mode,
      </if>
      <if test="recommendPicUrl != null" >
        recommend_pic_url,
      </if>
      <if test="activetyStatus != null" >
        activety_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="activetyId != null" >
        #{activetyId,jdbcType=BIGINT},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="cost != null" >
        #{cost,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="personNumber != null" >
        #{personNumber,jdbcType=INTEGER},
      </if>
      <if test="checkStatus != null" >
        #{checkStatus,jdbcType=TINYINT},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="mapPsitionAddress != null" >
        #{mapPsitionAddress,jdbcType=VARCHAR},
      </if>
      <if test="detailAddress != null" >
        #{detailAddress,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="entryStartTime != null" >
        #{entryStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="entryEndTime != null" >
        #{entryEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="activetyMode != null" >
        #{activetyMode,jdbcType=TINYINT},
      </if>
      <if test="recommendPicUrl != null" >
        #{recommendPicUrl,jdbcType=VARCHAR},
      </if>
      <if test="activetyStatus != null" >
        #{activetyStatus,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yikangyiliao.pension.entity.Activety" >
    update activetys
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="cost != null" >
        cost = #{cost,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="personNumber != null" >
        person_number = #{personNumber,jdbcType=INTEGER},
      </if>
      <if test="checkStatus != null" >
        check_status = #{checkStatus,jdbcType=TINYINT},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="mapPsitionAddress != null" >
        map_psition_address = #{mapPsitionAddress,jdbcType=VARCHAR},
      </if>
      <if test="detailAddress != null" >
        detail_address = #{detailAddress,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="entryStartTime != null" >
        entry_start_time = #{entryStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="entryEndTime != null" >
        entry_end_time = #{entryEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="activetyMode != null" >
        activety_mode = #{activetyMode,jdbcType=TINYINT},
      </if>
      <if test="recommendPicUrl != null" >
        recommend_pic_url = #{recommendPicUrl,jdbcType=VARCHAR},
      </if>
      <if test="activetyStatus != null" >
        activety_status = #{activetyStatus,jdbcType=TINYINT},
      </if>
    </set>
    where activety_id = #{activetyId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yikangyiliao.pension.entity.Activety" >
    update activetys
    set title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      cost = #{cost,jdbcType=DOUBLE},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      person_number = #{personNumber,jdbcType=INTEGER},
      check_status = #{checkStatus,jdbcType=TINYINT},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      map_psition_address = #{mapPsitionAddress,jdbcType=VARCHAR},
      detail_address = #{detailAddress,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      entry_start_time = #{entryStartTime,jdbcType=TIMESTAMP},
      entry_end_time = #{entryEndTime,jdbcType=TIMESTAMP},
      activety_mode = #{activetyMode,jdbcType=TINYINT},
      recommend_pic_url = #{recommendPicUrl,jdbcType=VARCHAR},
      activety_status = #{activetyStatus,jdbcType=TINYINT}
    where activety_id = #{activetyId,jdbcType=BIGINT}
  </update>

<!-- 查询所有活动 -->

	 <resultMap type="com.yikangyiliao.pension.entity.Activety" extends="BaseResultMap" id="getActivetysMapper">
		<result column="createUsername" property="createUsername"/>
		<result column="photo_url" property="photoUrl"/>
		<result column="user_position" property="userPosition"/>
 	</resultMap>
	<select id="getActivetys" resultMap="getActivetysMapper" parameterType="long">
	<if test="null != userId">
		select
			activetys.*,
			ui.user_name as createUsername,
			ui.user_sex,
			ui.photo_url,
			usi.user_position,
			(select count(1) as partaketNums from user_activety_lists where activety_id=activetys.activety_id) as partakeNums,
		    if(ifnull(ual.activety_id,0)=0,0,1)as 'isPartake'
		from activetys  left join user_infos ui on activetys.create_user_id=ui.user_id
		left join user_service_infos usi on ui.user_id=usi.user_id
		left join (select * from user_activety_lists where user_id=#{userId}) ual on activetys.activety_id=ual.activety_id
	</if>
	<if test="null == userId">
		select
			activetys.*,
			ui.user_name as createUsername,
			ui.user_sex,
			ui.photo_url,
			usi.user_position,
			(select count(1) as partaketNums from user_activety_lists where activety_id=activetys.activety_id) as partakeNums
		from activetys  left join user_infos ui on activetys.create_user_id=ui.user_id
		left join user_service_infos usi on ui.user_id=usi.user_id
	</if>
	</select>
	  
  <!-- 获取料一个活动详情 -->
  <resultMap type="com.yikangyiliao.pension.entity.Activety" extends="BaseResultMap" id="getActivetysDetailByIdResultMap">
	<result column="user_name" property="createUsername"/>
	<result column="photo_url" property="photoUrl"/>
	<result column="user_position" property="userPosition"/>
	<result column="is_follow" property="isFollow"/>
	<collection property="followUsers" column="activety_id" select="com.yikangyiliao.pension.dao.UserActivetyListDao.getUserInfoListByActivetyId"> </collection>
  </resultMap>
  <select id="getActivetysDetailById" parameterType="map" resultMap="getActivetysDetailByIdResultMap">
  	select
  		 activetys.*,
	    ui.user_name,
	    ui.user_sex,
	    ui.photo_url,
	    usi.user_position,
	    (select count(1) from activetys ac where ac.create_user_id=activetys.create_user_id) as createActivetyNumber,
	    (select count(1) as partaketNums from user_activety_lists where activety_id=activetys.activety_id) as partakeNums,
		if(ifnull(ual.activety_id,0)=0,0,1)as 'isPartake',
		(select if(ifnull(fum.follow_user_maps_id,0)>0,1,0) from follow_user_maps fum  where fum.create_user_id =#{userId} and fum.follow_user_id=ui.user_id) as is_follow
  	 from activetys left join user_infos ui on activetys.create_user_id=ui.user_id
  	 left join user_service_infos usi on ui.user_id=usi.user_id
  	 left join (select * from user_activety_lists where user_id=#{userId}) ual on activetys.activety_id=ual.activety_id
  	 where activetys.activety_id=#{activetyId}
  </select>
  
  
  <!--查询我发布的活动  -->
  <select id="selectActivetyByUserId"  parameterType="long" resultMap="BaseResultMap">
  	 select 
  		 <include refid="Base_Column_List"></include>,
  		 (select count(1) as partaketNums from user_activety_lists where activety_id=activetys.activety_id) as partakeNums
  	 from activetys
  	 where create_user_id=#{userId}
  	 order by activetys.create_time desc
  </select>
  
    <!--查询我发布的活动  -->
  <select id="selectActivetyByUserIdPage"  parameterType="long" resultMap="BaseResultMap">
  	 select 
  		 <include refid="Base_Column_List"></include>,
  		 (select count(1) as partaketNums from user_activety_lists where activety_id=activetys.activety_id) as partakeNums
  	 from activetys
  	 where create_user_id=#{userId}
  	 order by activetys.create_time desc
  </select>
  
  <!-- 查询某一个用户参加的某一个活动的信息 -->
  <select id="getActivetyByUserIdAndActivetyId" parameterType="map" resultMap="BaseResultMap" >
  	select
  		activetys.*
  	from activetys inner join user_activety_lists ual
	on activetys.activety_id=ual.activety_id 
	where ual.activety_id=#{activetyId} and ual.user_id=#{userId}
	order by ual.create_time desc
  </select>
  
  
</mapper>