<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yikangyiliao.pension.dao.SignInDao">
  <resultMap id="BaseResultMap" type="com.yikangyiliao.pension.entity.SignIn">
    <id column="sign_in_id" jdbcType="BIGINT" property="signInId" />
    <result column="create_datetime" jdbcType="TIMESTAMP" property="createDatetime" />
    <result column="update_datetime" jdbcType="TIMESTAMP" property="updateDatetime" />
    <result column="create_user_id" jdbcType="BIGINT" property="createUserId" />
    <result column="score" jdbcType="INTEGER" property="score" />
  </resultMap>
  <sql id="Base_Column_List">
    sign_in_id, create_datetime, update_datetime, create_user_id, score
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sign_ins
    where sign_in_id = #{signInId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sign_ins
    where sign_in_id = #{signInId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yikangyiliao.pension.entity.SignIn">
    insert into sign_ins (sign_in_id, create_datetime, update_datetime, 
      create_user_id, score)
    values (#{signInId,jdbcType=BIGINT}, #{createDatetime,jdbcType=TIMESTAMP}, #{updateDatetime,jdbcType=TIMESTAMP}, 
      #{createUserId,jdbcType=BIGINT}, #{score,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.yikangyiliao.pension.entity.SignIn">
    insert into sign_ins
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="signInId != null">
        sign_in_id,
      </if>
      <if test="createDatetime != null">
        create_datetime,
      </if>
      <if test="updateDatetime != null">
        update_datetime,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="score != null">
        score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="signInId != null">
        #{signInId,jdbcType=BIGINT},
      </if>
      <if test="createDatetime != null">
        #{createDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDatetime != null">
        #{updateDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yikangyiliao.pension.entity.SignIn">
    update sign_ins
    <set>
      <if test="createDatetime != null">
        create_datetime = #{createDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDatetime != null">
        update_datetime = #{updateDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
    </set>
    where sign_in_id = #{signInId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yikangyiliao.pension.entity.SignIn">
    update sign_ins
    set create_datetime = #{createDatetime,jdbcType=TIMESTAMP},
      update_datetime = #{updateDatetime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      score = #{score,jdbcType=INTEGER}
    where sign_in_id = #{signInId,jdbcType=BIGINT}
  </update>
</mapper>