<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yikangyiliao.pension.dao.TimeQuantumDao" >
  <resultMap id="BaseResultMap" type="com.yikangyiliao.pension.entity.TimeQuantum" >
    <id column="time_quantum_id" property="timeQuantumId" jdbcType="BIGINT" />
    <result column="start_time" property="startTime" jdbcType="INTEGER" />
    <result column="end_time" property="endTime" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="update_time" property="updateTime" jdbcType="BIGINT" />
    <result column="is_delete" property="isDelete" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    time_quantum_id, start_time, end_time, create_time, update_time, is_delete
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from time_quantums
    where time_quantum_id = #{timeQuantumId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from time_quantums
    where time_quantum_id = #{timeQuantumId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yikangyiliao.pension.entity.TimeQuantum" >
    insert into time_quantums (time_quantum_id, start_time, end_time, 
      create_time, update_time, is_delete
      )
    values (#{timeQuantumId,jdbcType=BIGINT}, #{startTime,jdbcType=INTEGER}, #{endTime,jdbcType=INTEGER}, 
      #{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{isDelete,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yikangyiliao.pension.entity.TimeQuantum" >
    insert into time_quantums
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="timeQuantumId != null" >
        time_quantum_id,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="timeQuantumId != null" >
        #{timeQuantumId,jdbcType=BIGINT},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=INTEGER},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yikangyiliao.pension.entity.TimeQuantum" >
    update time_quantums
    <set >
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=INTEGER},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
    </set>
    where time_quantum_id = #{timeQuantumId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yikangyiliao.pension.entity.TimeQuantum" >
    update time_quantums
    set start_time = #{startTime,jdbcType=INTEGER},
      end_time = #{endTime,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      is_delete = #{isDelete,jdbcType=TINYINT}
    where time_quantum_id = #{timeQuantumId,jdbcType=BIGINT}
  </update>
  
  <select id="getAllTimeQuantum" resultMap="BaseResultMap">
  	select 
  		<include refid="Base_Column_List"></include>
  	from time_quantums
  </select>
  
  
  <!--  查询某一天中的，所有时间点，是否有可用时间-->
  <!--  postion =0 是评估师 -->
  <select id="getTimeQuantumsForCustomer" resultType="map" parameterType="map">

	select
		timeQuantumsCh.time_quantum_id,
		timeQuantumsCh.start_time,
		timeQuantumsCh.end_time,
	case 
		when timeQuantumsCh.count >=usi.userNumber or timeQuantumsCh.time_quantum_id2 is null  then true
	    else false
	end 'disabled'
	from( 
		select 
			timeQuantums.count,
			timeQuantums.time_quantum_id,
			timeQuantums.start_time,
			timeQuantums.end_time,
			timeIsHave.time_quantum_id as 'time_quantum_id2'
			from 
			(
				select 
					count(ssd.time_quantum_id) 'count',
					tq.time_quantum_id,
					tq.start_time,
					tq.end_time
				from time_quantums tq 
				left join order_service_details ssd on (ssd.time_quantum_id=tq.time_quantum_id and ssd.service_date=#{serviceDate})
				group by tq.time_quantum_id
			) timeQuantums
			left join
			(
				select 
					ssd.time_quantum_id
				from service_schedules ss 
				inner join service_schedule_details ssd 
				on ss.service_schedule_id=ssd.service_schedule_id
				where service_date=#{serviceDate}
			) timeIsHave
			on timeQuantums.time_quantum_id=timeIsHave.time_quantum_id
	) timeQuantumsCh,
    (
		select 
			count(usi.user_id) as 'userNumber' 
		from user_service_infos usi
		where usi.user_postion=0
	) usi
  </select>
  
  
</mapper>