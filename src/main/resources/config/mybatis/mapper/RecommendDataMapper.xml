<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yikangyiliao.pension.dao.RecommendDataDao">
  <resultMap id="BaseResultMap" type="com.yikangyiliao.pension.entity.RecommendData">
    <id column="recommend_data_id" jdbcType="BIGINT" property="recommendDataId" />
    <result column="recomend_group" jdbcType="TINYINT" property="recomendGroup" />
    <result column="data_id" jdbcType="BIGINT" property="dataId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    recommend_data_id, recomend_group, data_id, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from recommend_datas
    where recommend_data_id = #{recommendDataId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from recommend_datas
    where recommend_data_id = #{recommendDataId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yikangyiliao.pension.entity.RecommendData">
    insert into recommend_datas (recommend_data_id, recomend_group, data_id, 
      create_time, update_time)
    values (#{recommendDataId,jdbcType=BIGINT}, #{recomendGroup,jdbcType=TINYINT}, #{dataId,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.yikangyiliao.pension.entity.RecommendData">
    insert into recommend_datas
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="recommendDataId != null">
        recommend_data_id,
      </if>
      <if test="recomendGroup != null">
        recomend_group,
      </if>
      <if test="dataId != null">
        data_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="recommendDataId != null">
        #{recommendDataId,jdbcType=BIGINT},
      </if>
      <if test="recomendGroup != null">
        #{recomendGroup,jdbcType=TINYINT},
      </if>
      <if test="dataId != null">
        #{dataId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yikangyiliao.pension.entity.RecommendData">
    update recommend_datas
    <set>
      <if test="recomendGroup != null">
        recomend_group = #{recomendGroup,jdbcType=TINYINT},
      </if>
      <if test="dataId != null">
        data_id = #{dataId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where recommend_data_id = #{recommendDataId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yikangyiliao.pension.entity.RecommendData">
    update recommend_datas
    set recomend_group = #{recomendGroup,jdbcType=TINYINT},
      data_id = #{dataId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where recommend_data_id = #{recommendDataId,jdbcType=BIGINT}
  </update>
  
  <select id="queryRecommendUserInfo"	resultType="com.yikangyiliao.pension.entity.UserServiceInfo">
		select usi.photo_url as photoUrl,ui.user_name as userName,usi.address_detail as addressDetail,
			usi.new_user_position as newUserPosition,usi.oraganization_name as oraganizationName, 
			d.designation_name as designationName,ui.user_id as userId
		from user_infos ui
		left join user_service_infos usi on usi.user_id = ui.user_id
		left join designations d on d.designation_id = ui.designation_id
		where ui.user_id in (select data_id from recommend_datas where recomend_group=0)
	</select>
	
	<select id="queryRecommendTaglibsInfo" resultType="com.yikangyiliao.pension.entity.Taglib">
		select taglib_id as taglibId,tag_name as tagName,tag_pic as tagPic from taglibs where taglib_id in
		(select data_id from recommend_datas where recomend_group=1 )
	</select>
</mapper>